START -> STM+
STM+ -> STM+ ; STM | STM
 STM -> ID = EXP | IFS | while ( BEXP ) { STM+ } | STM ;
 IFS -> ID = if ( BEXP ) { EXP } else { EXP }
 IFS -> if ( BEXP ) { STM+ } else { STM+ } | if ( BEXP ) { STM+ }
 EXP -> ID | NUM | EXP + EXP | ( EXP ) | ID ( ARGS ) | BEXP
ARGS -> EXP | EXP , ARGS
BEXP -> EXP == EXP | EXP < EXP | ( BEXP ) | LIT | ! BEXP
 LIT -> true | false
---

ID = NUM ;

ID = _ _ _ ;

_ _ _ <LIT> _ ID ) _ _ _

<LIT> ( <LIT> + ID )

if ( ID < NUM ) { ID = ID ; } else { ID = ID + NUM ; }

if ( ID < NUM ) { ID = ID ; } else { ID = ID + NUM ;

while ( ID == NUM ) { ID = ID + NUM ; }

while ( ID == NUM ) { ID ID + NUM ; }

while ( ID == NUM { ID ID + NUM ; } }

ID = if ( ID == true ) { ID ( true ) } else { false < true }

ID = if ( ID == true ) { ID ( true ) } else { false ; true }