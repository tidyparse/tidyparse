S -> X
X -> B | I | F | P | L | V | M
P -> I O I
F -> IF | BF

IF -> if B then I else I
BF -> if B then B else B

L -> let V = B
L -> let V = I
L -> let V = M

LI -> L in X

V -> a | b | c | V V | r | e | rec
O -> + | - | * | /
I -> 0 | 1 | 2 | 3 | 4 | IF
B -> true | false | B BO B | ( B ) | BF | ( BF )
BO -> and | or

End -> `|` X `->` X | End End
M -> match V with End

---

let rec b a = _ _ _ _ _ _ _ _ <B>